<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eishub.bw4t</groupId>
	<artifactId>bw4t-integration-test</artifactId>
	<version>3.10.2-SNAPSHOT</version>
	<description>This module integration test the entire bw4t system, to ensure the working state of the client and server.</description>
	<url>http://www.github.com/eishub/bw4t</url>

	<properties>
		<checkstyle.config.location>../checkstyle.xml</checkstyle.config.location>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<organization>
		<name>eishub</name>
		<url>https://github.com/eishub</url>
	</organization>

	<issueManagement>
		<url>https://github.com/eishub/bw4t/issues</url>
		<system>Github BW4T Issues</system>
	</issueManagement>

	<scm>
		<connection>scm:git:git@github.com:eishub/bw4t.git</connection>
		<developerConnection>scm:git:git@github.com:eishub/bw4t.git</developerConnection>
		<url>https://github.com:eishub/bw4t</url>
	</scm>

	<repositories>
		<repository>
			<id>eishub-mvn-repo</id>
			<url>https://raw.github.com/eishub/mvn-repo/master</url>
		</repository>
		<repository>
			<id>git-bw4t-dependency-repository</id>
			<name>Git BW4T Dependency Repository</name>
			<url>https://eishub.github.io/BW4T/repo/bw4t/dep/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>bw4t-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>bw4t-server</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>bw4t-client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>repast.simphony</groupId>
			<artifactId>scenario</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>repast.simphony</groupId>
			<artifactId>bin_and_src</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.12.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- *** failsafe plugin: run server and test the integration *** -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<workingDirectory>${basedir}/target/</workingDirectory>
				</configuration>
			</plugin>

			<!-- *** Ant plugin: start and stop the integration server *** -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>start-server</id>
						<phase>pre-integration-test</phase>
						<configuration>
							<target>
								<mkdir dir="target/run-server/" />
								<java fork="true" spawn="true" dir="target/run-server/"
									classpathref="maven.runtime.classpath"
									className="nl.tudelft.bw4t.server.environment.Launcher"
									args="-gui true -map Banana -key bw4tServerIntegration" />
								<waitfor maxwait="1" maxwaitunit="minute"
									checkevery="200">
									<socket server="localhost" port="8000" />
								</waitfor>
								<sleep seconds="5" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-server</id>
						<phase>post-integration-test</phase>
						<configuration>
							<target>
								<!-- *** run a java client to kill the server *** -->
								<java classpathref="maven.runtime.classpath"
									className="nl.tudelft.bw4t.client.environment.RemoteEnvironment"
									args="-kill bw4tServerIntegration" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>none</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<server>github</server>
					<!-- git commit message -->
					<message>Maven artifacts for ${project.name} version
						${project.version}</message>
					<!-- matches distribution management repository url above -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<!-- remote branch name -->
					<branch>refs/heads/master</branch>
					<merge>true</merge>
					<includes>
						<include>**/*</include>
					</includes>
					<!-- github repo name -->
					<repositoryName>mvn-repo</repositoryName>
					<!-- github organization -->
					<repositoryOwner>eishub</repositoryOwner>
				</configuration>
				<executions>
					<!-- run site-maven-plugin as part of the build's 'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
